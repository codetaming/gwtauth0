group 'org.codetaming.gwtauth0'
version = '0.1.0'

apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'com.google.gwt:gwt-user:2.8.0'
    compileOnly 'com.google.gwt:gwt-dev:2.8.0'
    compileOnly 'org.fusesource.restygwt:restygwt:2.2.0'
    compile 'com.google.gwt.inject:gin:2.1.2'
}

task compileGwt(dependsOn: classes, type: JavaExec) {
    ext.buildDir = "${project.buildDir}/gwt"
    ext.extraDir = "${project.buildDir}/extra"

    inputs.source sourceSets.main.java.srcDirs
    inputs.dir sourceSets.main.output.resourcesDir
    outputs.dir buildDir

    doFirst {
        file(buildDir).mkdirs()
    }

    main = 'com.google.gwt.dev.Compiler'

    classpath {
        [
                sourceSets.main.java.srcDirs,           // Java source
                sourceSets.main.output.resourcesDir,    // Generated resources
                sourceSets.main.output.classesDir,      // Generated classes
                sourceSets.main.compileClasspath,       // Deps
        ]
    }

    args = [
            'org.codetaming.gwt.auth0.GwtAuth0Client',
            '-war', buildDir,
            '-logLevel', 'ERROR',
            '-localWorkers', '4',
            '-compileReport',
            '-extra', extraDir,
            '-style', 'PRETTY',
            '-optimize', '7' // 0=none, 9=max
    ]

    maxHeapSize = '512M'
}

jar.dependsOn compileGwt

jar.doFirst {
    sourceSets.main.java.srcDirs.each {
        from it
    }
}

task sourceJar(type: Jar) { from sourceSets.main.allJava }

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar { classifier "sources" }
        }
    }
    repositories {
        maven {
            url "file://Users/danielvaughan/Development/git/maven-public/releases"
        }
    }
}
